% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross_distance.R
\name{cross_distance}
\alias{cross_distance}
\alias{cross_distance.data.frame}
\alias{cross_distance.clust_analysis}
\alias{cross_distance.min_analysis}
\alias{cross_distance.combi_analysis}
\alias{cross_distance.umatrix_analysis}
\title{Compute cross-distances between data frames or clusters}
\usage{
cross_distance(x, ...)

\method{cross_distance}{data.frame}(x, y = NULL, method = "euclidean", ...)

\method{cross_distance}{clust_analysis}(x, y = NULL, method = NULL, .parallel = FALSE, ...)

\method{cross_distance}{min_analysis}(x, ...)

\method{cross_distance}{combi_analysis}(x, y = NULL, method = NULL, .parallel = FALSE, ...)

\method{cross_distance}{umatrix_analysis}(x, y = NULL, method = NULL, .parallel = FALSE, ...)
}
\arguments{
\item{x}{a data frame, \code{clust_analysis} or \code{combi_analysis} object.}

\item{...}{extra arguments passed to methods.}

\item{y}{an object like \code{x} or NULL (default).}

\item{method}{distance metric name as specified by
\code{\link{get_kernel_info}}.
For \code{clust_analysis} or \code{combi_analysis} instances.
If \code{method} is set to NULL,
the metric name is extracted from the object (distance between observations
for \code{clust_analysis} and \code{combi_analysis}, not between the SOM nodes). For
multi-layer SOM and their prediction, the distance methods are extracted
from the clustering objects.}

\item{.parallel}{logical, should the operation be run in parallel?}
}
\value{
For data frames: a matrix with pairwise distances,
observations of the \code{x} data frame
are present in rows, observations of the \code{y} data frame are presented
in columns.
For \code{clust_analysis} and \code{combi_analysis} results:
a list of cross-distance matrices of class \code{\link{cross_dist}}
with defined \code{\link{summary.cross_dist}} and
\code{\link{plot.cross_dist}} methods.
}
\description{
Computes cross-distances between two data frames with the same variable sets.
}
\details{
\code{cross_distance()} is a S3 generic function.
Distances (for available distances, see: \code{\link{get_kernel_info}}) are
computed in a pair-wise manner employing \code{\link[philentropy]{distance}}.
Preserves row names.
If a single data frame is provided, pairwise observations
between the observations are computed with \code{\link{calculate_dist}}.
If a single \code{clust_analysis} or \code{combi_analysis} object is provided,
cross-distances between the clusters within the object are computed -
so called 'homologous' distances, as opposed to 'heterologous' distances
computed in a pair-wise manner between clusters of two clustering analysis
objects.
Note: it is not possible to compute heterologous distances is cases of
clustering analyses done with an user-provided dissimilarity matrix
(subclass \code{min_analysis} of \code{clust_analysis} parent class). In such cases,
the \code{method} argument is ignored as well.
}
\references{
Drost H-G. Philentropy: Information Theory and Distance Quantification
with R. J Open Source Softw (2018) 3:765. doi:10.21105/joss.00765

Sulc Z, Cibulkova J, Rezankova H. nomclust: Hierarchical Cluster
Analysis of Nominal Data. (2021)
Available at: https://cran.r-project.org/package=nomclust
}
