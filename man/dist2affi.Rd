% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectralization.R
\name{dist2affi}
\alias{dist2affi}
\title{Compute an affinity matrix.}
\usage{
dist2affi(
  dist_mtx,
  kNN = 5,
  weighted = TRUE,
  simil_fun = function(x) 1/(1 + x)
)
}
\arguments{
\item{dist_mtx}{a square distance matrix.}

\item{kNN}{numeric, number of the nearest neighbors., has to be lower than
the dimension of \code{dist_mtx}.}

\item{weighted}{logical, should the affinity matrix be weighted by
similarity? Defaults to \code{TRUE}.}

\item{simil_fun}{a function used to convert pairwise distances
to pairwise similarities.}
}
\value{
a numeric matrix.
}
\description{
The function computes an affinity matrix given a dissimilarity/distance
matrix.
}
\details{
The code is inspired by two sources:
https://rpubs.com/gargeejagtap/SpectralClustering
http://www.di.fc.ul.pt/~jpn/r/spectralclustering/spectralclustering.html.

In brief, affinity matrices A in two flavors are computed:
\itemize{
\item \emph{weighted}: if observations \code{i} and \code{j} are nearest neighbors as defined by
\code{kNN}, \code{A[i,j] = similarity(i,j)}. Otherwise, \code{A[i,j] = 0}
\item \emph{unweighted}: if observations \code{i} and \code{j} are nearest neighbors as
defined by \code{kNN}, \code{A[i,j] = 1}. Otherwise, \code{A[i,j] = 0}
}

Note, that the conversion of of pairwise distances to pairwise similarities
is done with the user-provided function \code{simil_fun}. The default \code{siml_fun}
is a popular transformation of Euclidean distances to Euclidean similarities.
It is, however, recommended to experiment with other functions such as
\code{1 - x} for binary distances, \code{2 - x} for cosine distances, or even with
some common kernel functions (e.g. Gaussian kernel).
}
