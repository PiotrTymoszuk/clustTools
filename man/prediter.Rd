% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iterative_semi_supervised.R
\name{prediter}
\alias{prediter}
\alias{prediter.clust_analysis}
\alias{prediter.min_analysis}
\alias{prediter.umatrix_analysis}
\alias{prediter.combi_analysis}
\title{Iterative k-nearest neighbor label propagation algorithm.}
\usage{
prediter(x, ...)

\method{prediter}{clust_analysis}(
  x,
  newdata = NULL,
  select_stat = c("silhouette", "misclassification", "variance", "np"),
  max_k = 20,
  kNN_data = 5,
  kNN_cluster = NULL,
  .parallel = FALSE,
  ...
)

\method{prediter}{min_analysis}(x, ...)

\method{prediter}{umatrix_analysis}(x, ...)

\method{prediter}{combi_analysis}(
  x,
  newdata = NULL,
  select_stat = c("silhouette", "misclassification", "variance", "np"),
  max_k = 20,
  kNN_data = 5,
  kNN_cluster = NULL,
  .parallel = FALSE,
  ...
)
}
\arguments{
\item{x}{a \code{clust_analysis} or \code{combi_analysis} object.}

\item{...}{extra arguments passed to \code{\link{predict.clust_analysis}} or
\code{\link{predict.combi_analysis}} such as kernel weighting. Note that you
cannot specify the \code{kNN} and \code{type} arguments.}

\item{newdata}{a data frame or a matrix with the new data. If \code{NULL},
the training data is used for fitting the clustering structure.}

\item{select_stat}{a name of the loss function defining the quality measure
of the prediction. For details, see: Details.}

\item{max_k}{the maximal number of the nearest neighbors to be tested.}

\item{kNN_data}{number of the nearest neighbors in the dataset, used for
determination of neighborhood preservation statistic. See: \code{\link{np}}
for details.}

\item{kNN_cluster}{number of the nearest neighbors in the cluster, used for
determination of neighborhood preservation statistic. See: \code{\link{np}}
for details.}

\item{.parallel}{logical, should the analysis be run in parallel?}
}
\value{
an object of the \code{\link{tuner}} class with the \code{plot()} and \code{summary()}
methods.
}
\description{
Prediction of cluster assignment by the k-nearest neighbor label propagation
algorithm with an automated choice of the k value based on a loss function.
}
\details{
The function finds the optimal value of k for the k-nearest neighbor
classifier by iteratively checking quality of the cluster assignment. The
quality check is accomplished by one of the loss functions:
silhouette width (\code{select_stat = 'silhouette'}, default),
percentage of observations with negative silhouette widths
('misclassification'),
fraction of explained clustering variance (i.e. ratio of the between-cluster
sum of squares to the total sum of squares, \code{select_stat = 'variance'}),
or neighbor preservation (\code{select_stat = 'np'}).
The \code{prediter()} function is a S3 generic function.
The function works only for clustering analyses and combined SOM - clustering
analyses with the data provided as data frames but not as distance matrices.
}
\references{
Leng M, Wang J, Cheng J, Zhou H, Chen X. Adaptive semi-supervised
clustering algorithm with label propagation. J Softw Eng (2014) 8:14â€“22.
doi:10.3923/jse.2014.14.22
}
