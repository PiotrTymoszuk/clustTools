% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combi_clustering.R
\name{combi_cluster}
\alias{combi_cluster}
\alias{multi_cluster}
\title{Cluster self-organizing map nodes.}
\usage{
combi_cluster(
  data,
  distance_som = "euclidean",
  xdim = 5,
  ydim = 4,
  topo = "hexagonal",
  neighbourhood.fct = "gaussian",
  toroidal = FALSE,
  rlen = 500,
  som_args = NULL,
  node_clust_fun = hcluster,
  distance_nodes = distance_som,
  seed = 1234,
  ...
)

multi_cluster(
  data,
  distance_method = "euclidean",
  xdim = 5,
  ydim = 4,
  topo = "hexagonal",
  neighbourhood.fct = "gaussian",
  toroidal = FALSE,
  rlen = 500,
  som_args = NULL,
  node_clust_fun = hcluster,
  seed = 1234,
  ...
)
}
\arguments{
\item{data}{for \code{combi_clust()}, a numeric data frame, matrix or
a \code{red_analysis} object. If a \code{red_analysis} object is provided, its
component/score table will be clustered. For \code{multi_clust()} a list
of such objects.}

\item{distance_som}{metric of distance between the observations, used for SOM
development. See: \code{\link{get_kernel_info}}.}

\item{xdim}{x dimension of the SOM grid,
see: \code{\link[kohonen]{somgrid}} for details.}

\item{ydim}{y dimension of the SOM grid,
#' see: \code{\link[kohonen]{somgrid}} for details.}

\item{topo}{SOM grid topology, see: \code{\link[kohonen]{somgrid}}
for details. 'hexagonal' for default.}

\item{neighbourhood.fct}{neighborhood function, 'gaussian' for default.}

\item{toroidal}{logical, should toroidal grid be used?}

\item{rlen}{number of the SOM algorithm iterations.}

\item{som_args}{a list of extra arguments passed to
\code{\link{som_cluster}}, \code{\link[kohonen]{som}} or
\code{\link[kohonen]{supersom}}. They may include weights for data layers
or the learning rate.}

\item{node_clust_fun}{a function provided by the clustTools package used to
cluster the SOM nodes. An alternative for \code{combi_cluster()}: a user-provided
function that takes a numeric data frame or matrix and returns a
\code{clust_analysis} object. An alternative for \code{multi_cluster()}: a
user-provided function that takes a dissimilarity object (R's \code{dist} class)
and returns a \code{clust_analysis} object.}

\item{distance_nodes}{metric of distance between the nodes, used for SOM
development. Defaults to \code{distance_som}. See: \code{\link{get_kernel_info}}.}

\item{seed}{initial setting of the random number generator.}

\item{...}{extra arguments. For \code{combi_clust()}, they are passed to
\code{node_clust_fun} and may include e.g. \code{k} number of clusters.}

\item{distance_method}{a vector of distance names, that matches elemnts of
the \code{data} list.}
}
\value{
an object of the class \code{\link{combi_analysis}}.
}
\description{
Performs clustering of the self-organizing map (SOM) with
one of the clustering functions provided by the clustTools package.
}
\details{
The clustering procedure involves construction of SOM with the user-provided
data followed by unsupervised clustering of the inter-node distance matrix.
For \code{combi_cluster()} tackling single-layer SOM, the user is allowed to
specify distances both for the input data and the nodes.
In case when both distance methods are the same, the inter-node
distance matrix corresponds to a classical U-matrix as computed by
\code{\link[kohonen]{object.distances}} - this is also the
recommended default option.
\code{multi_cluster()}, which takes a multi-layer data set as the \code{data} argument,
the U matrix constructed by \code{\link[kohonen]{object.distances}} is
always used as the inter-node distance matrix subjected to unsupervised
clustering.
}
\references{
Vesanto J, Alhoniemi E. Clustering of the self-organizing map.
IEEE Trans Neural Networks (2000) 11:586â€“600. doi:10.1109/72.846731
}
