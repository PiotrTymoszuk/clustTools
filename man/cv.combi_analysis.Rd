% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combi_analysis_oop.R
\name{cv.combi_analysis}
\alias{cv.combi_analysis}
\title{Cross-validate the clustering object.}
\usage{
\method{cv}{combi_analysis}(
  x,
  nfolds = 5,
  kNN = 5,
  simple_vote = TRUE,
  resolve_ties = FALSE,
  kernel_fun = function(x) 1/x,
  seed = 1234,
  .parallel = FALSE
)
}
\arguments{
\item{x}{a combi_analysis object.}

\item{nfolds}{number of CV folds.}

\item{kNN}{number of the nearest neighbors.}

\item{simple_vote}{logical, should classical unweighted k-NN classification
be applied? If FALSE, distance-weighted k-NN is used with the provided kernel
function.}

\item{resolve_ties}{logical, should the ties be resolved at random? Applies
only to the simple unweighted voting algorithm.}

\item{kernel_fun}{kernel function transforming the distance into weight.}

\item{seed}{initial setting of the random number generator.}

\item{.parallel}{logical, should the CV be run in parallel? Experimental.}
}
\value{
a list containing the global clust_analysis object, projection
(prediction) results and prediction summary for each fold and a prediction
summary for the whole CV.
}
\description{
Checks the stability of a clustering solution by
cross-validation (CV) and the classification error as a measure of the cluster
stability.
}
\details{
By principle similar to cross-validation of any machine learning
multi-level classifier. The training portion of a CV split is used to develop
of a cluster structure and the projection on the test portion is accomplished
by k-nearest neighbor (kNN) label propagation algorithm. For its
implementation details, see: \code{\link{propagate}}.
The fold are generated with \code{\link[caret]{createFolds}}.
}
